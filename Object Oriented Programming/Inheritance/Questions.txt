Single-Level Inheritance (2)
Create a class Person with a method displayDetails(), and a class Student that inherits from Person. Add a method showGrade() in Student. Demonstrate single-level inheritance using both methods.

Create a base class Vehicle with a method start(), and a derived class Car that adds a method drive(). Show how the derived class can access both methods.

ðŸ”¹ Multilevel Inheritance (3)
Create a class Animal, extended by Mammal, which is further extended by Human. Each class should have a unique method. Show how the Human class can access all methods.

Design a multilevel inheritance structure with classes Shape -> Polygon -> Triangle. Add specific methods in each class and invoke them from a Triangle object.

Write a Java program with classes Machine -> Computer -> Laptop, where each class adds one new method. Demonstrate method calling across all levels.

ðŸ”¹ Multiple Inheritance (3 â€” via Interfaces in Java)
Create two interfaces Flyable and Swimmable with methods fly() and swim(). Create a class Duck that implements both interfaces and show method resolution.

Define interfaces Readable and Writable and implement them in a class Book. Add concrete implementations and demonstrate interface-based multiple inheritance.

Create interfaces Engine and Gearbox, and a class Car that implements both. Add unique methods in both interfaces and demonstrate their usage from a Car object.

ðŸ”¹ Hierarchical Inheritance (2)
Create a base class Employee with a method work(). Derive two classes Manager and Developer from it, each with their own method. Demonstrate hierarchical inheritance.

Write a program where a class Appliance is extended by WashingMachine and Refrigerator. Show how both derived classes can access the base class method.

